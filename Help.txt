To get JavaFX to work:
	Download: https://gluonhq.com/products/javafx/
	Instructions: 
		https://stackoverflow.com/questions/52467561/intellij-cant-recognize-javafx-11-with-openjdk-11?noredirect=1&lq=1&fbclid=IwAR2X930i6UqGTEvAifotDWmurF2uCgdwSUOhP03wfMzzIMELs-p-rS5Aj3Y
		https://www.youtube.com/watch?v=qn2tbftFjno&t=37s

Drawing shape
	https://www.tutorialspoint.com/javafx/javafx_2d_shapes.htm?fbclid=IwAR2NeBM_BUsyXa7Amcx132JK6pfjlsyE-jhmuXzcyrSm67szq6Cpn-pvrjs
Paint
	https://stackoverflow.com/questions/32981758/easier-way-to-make-a-paint-application-in-java
	http://math.hws.edu/eck/cs124/javanotes6/source/SimplePaint.java
	https://www.youtube.com/watch?v=0u5aotARyU8

Different GUI layout styles
	https://docs.oracle.com/javafx/2/layout/builtin_layouts.htm

Undo/Redo
	https://stackoverflow.com/questions/23608166/undo-method-for-a-paint-program
	Though it may not be efficient to store all intermediate images. Generally the idea is to generate some commands each time you alter
	the painting area. Say you have draw() and erase(). You will then store these commands as they are invoked. Then, when undo is needed,
	take the last command and "reverse" it. Once you've done undo, the implementation of redo should become apparent.














//        Extra code fragments can be added to start above
    //===========================
//        //Test
//        drawStar();
//
//        //Setting title to the Stage
//        stage.setTitle("Sample Program");
//        //Adding scene to the stage
//        stage.setScene(sceneStar);
//        //Displaying the contents of the stage
//        stage.show();
    //============================================= Testing vertical toolbar buttons

//    //Name RadioButtons
//    RadioButton rdoPlot = new RadioButton("Plot");
//    RadioButton rdoLine = new RadioButton("Line");
//    RadioButton rdoRectangle = new RadioButton("Rectangle");
//    RadioButton rdoEllipse = new RadioButton("Ellipse");
//    RadioButton rdoPolygon = new RadioButton("Polygon");
//
//    //Group Buttons
//    ToggleGroup groupDifficulty = new ToggleGroup();
//        groupDifficulty.getToggles().addAll(
//            rdoPlot,
//            rdoLine,
//            rdoRectangle,
//            rdoEllipse,
//            rdoPolygon);
//    ToolBar toolBarTools = new ToolBar();
//        toolBarTools.setOrientation(Orientation.VERTICAL);
//        toolBarTools.getItems().addAll(
//                new Separator(),
//    rdoPlot,
//    rdoLine,
//    rdoRectangle,
//    rdoEllipse,
//    rdoPolygon,
//            new Separator());
//    BorderPane pane = new BorderPane();
//        pane.setLeft(toolBarTools);
//    Scene guiScene = new Scene(pane, 600, 400);
//    stage.setScene(guiScene);

    //Draw Star
//    public void drawStar(){
//        //Moving to the starting point
//        MoveTo moveTo = new MoveTo(108, 71);
//        //Creating 1st line
//        LineTo line1 = new LineTo(321, 161);
//        //Creating 2nd line
//        LineTo line2 = new LineTo(126,232);
//        //Creating 3rd line
//        LineTo line3 = new LineTo(232,52);
//        //Creating 4th line
//        LineTo line4 = new LineTo(269, 250);
//        //Creating 4th line
//        LineTo line5 = new LineTo(108, 71);
//
//        //Creating a Path
//        Path path = new Path();
//        //Adding all the elements to the path
//        path.getElements().add(moveTo);
//        path.getElements().addAll(line1, line2, line3, line4, line5);
//        //Creating a Group object
//        Group root = new Group(path);
//        //Creating a scene object
//        sceneStar = new Scene(root, 600, 300);
//    }

